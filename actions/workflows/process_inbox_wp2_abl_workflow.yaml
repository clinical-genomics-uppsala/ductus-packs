version: "1.0" # Orquest version

description: Will analyse data found in the wp2 ABL inbox folder

input:
    - runfolder
    - host
    - runfolder_host
    - runfolder_host_port
    - runfolder_api_version
    - processing_host
    - processing_key
    - processing_user
    - mail_lab
    - mail_bioinfo
    - run_statistics_path

vars:
  - runfolder_name: null
  - failed_step: null
  - stderr: null

tasks:
  get_runfolder_name:
    action: core.local
    input:
      cmd: python3 -c 'import sys; sys.stdout.write("<% ctx(runfolder) %>".split("/")[-1])'
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do:
          - mark_as_started
          - generate_elastic_statistics
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: 'get_runfolder_name  -- Could not get runfolder name'
        do:
          - bioinfo_error_notifier

  generate_elastic_statistics:
      action: core.local
      input:
        cwd: <% ctx(runfolder) %>
        cmd: python3 -c 'import json; from ductus.tools.utils import generate_elastic_statistics; writer=open("<% ctx(run_statistics_path) %>/<% ctx(runfolder_name) %>.json", "w"); [writer.write(json.dumps(d) + "\n") for d in generate_elastic_statistics(samplesheet="SampleSheet.csv", workpackage="wp2", tool="abl", analysis="BCR_ABL1", project="klinik", prep="Nextera")]; writer.close()'

  mark_as_started:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "started"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - run_bcr_abl1_pipeline
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_started -- Couldn't mark <% ctx(runfolder) %> as started!"
        do:
          - bioinfo_error_notifier
          - wp2_abl_error_notifier

  run_bcr_abl1_pipeline:
    action : core.remote
    input:
      username: <% ctx(processing_user) %>
      private_key: <% ctx(processing_key) %>
      hosts: <% ctx(processing_host) %>
      cwd: <% ctx(runfolder) %>
      cmd: bash /projects/wp2/nobackup/WP2_smallscripts/pipeline-starting-scripts/start_bcr_abl1.sh <% ctx(runfolder_name) %>
      timeout: 172800
      hosts: <% ctx(processing_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
      - when: <% failed() %>
        publish:
          - stderr: "BCR_ABL1 pipeline failed"
          - failed_step: failed_step="run_bcr_abl1_pipeline  -- Couldn't start BCR_ABL1 pipeline for <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - wp2_abl_error_notifier
          - mark_as_failed

  wp2_abl_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][WP2][ABL][ERROR] - BCR_ABL1  processing failure, <% ctx(runfolder) %>"
      body: Something went wrong during BCR_ABL1 pipeline processing of folder <% ctx(runfolder) %>. A Bioinformatician has been notified.
    next:
      - when: <% succeeded() %>
        do:
          - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][WP2][ABL][ERROR] - BCR_ABL1 processing failure, <% ctx(runfolder) %>"
      body: Something went wrong during the BCR_ABL1 pipeline processing of <% ctx(runfolder) %>, please investigate!!!\n Failure message -- <% failed_step  %>, <% ctx(stderr) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "done"}'
      method: "POST"
    next:
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_finished -- Couldn't mark <% ctx(runfolder) %> as finished!"
        do:
          - bioinfo_error_notifier
          - wp2_abl_error_notifier

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_failed -- Couldn't mark <% ctx(runfolder) %> as failed!"
        do:
          - bioinfo_error_notifier
          - wp2_abl_error_notifier

output:
  - stderr: <% ctx(stderr) %>
