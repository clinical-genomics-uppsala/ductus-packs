version: "1.0" # Orquest version

description: Will process data written to Workarea by Illumina machines

input:
  - runfolder
  - runfolder_host
  - runfolder_host_port
  - api_version
  - mail_bioinfo
  - check_demultiplexing_completed_delay
  - num_check_demultiplexing_completed
  - check_demultiplexing_retry_delay

vars:
  - csv_file_name: null
  - experiment_name: null
  - runfolder_name: null
  - inbox_folder: null
  - failed_step: null
  - complete_job_file_path: null
  - fastq_files_path: null
  - run_info_path: null
  - interop_path: null

tasks:
  check_for_samplesheet:
    action: core.local
    input:
      cmd: ls SampleSheet.csv
      cwd: <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: csv_file_name=<% result().stdout %>
        do:
          - get_runfolder_name
      - when: <% failed() %>
        publish: failed_step="get_csv_file_name  -- Couldn't locate a SampleSheet.csv file in folder <% ctx(runfolder) %>, <% result().stdout %>, <% result().stderr %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_runfolder_name:
    action: core.local
    input:
      cmd: basename <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do:
          - get_machine_type
      - when: <% failed() %>
        publish: failed_step="get_runfolder_name  -- Couldn't get runfolder name, <% result().stdout %>, <% result().stderr %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_machine_type:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; p = re.compile("\d*_(MN|M0|NDX|NB).*_.*");sys.stdout.write(p.search("<% ctx(runfolder_name) %>").group(1))'
    next:
      - when: <% succeeded() %>
        publish: machine_type=<% result().stdout %>
        do:
          - validate_folder_name
      - when: <% failed() %>
        publish: failed_step="get_machine_type  -- Couldn't parse the machine type from runfolder name, <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - unexpected_machine_type
          - mark_as_failed

  validate_folder_name:
    action: core.local
    input:
      cmd: echo <% ctx(runfolder_name) %> | awk '!/^[0-9]*_[A-Z0-9]*_([0-9]*|RUO_[0-9]*)_[A-Z0-9-]*$/ {exit(1)}'
    next:
      - when: <% succeeded() and ctx().machine_type = 'MN' %>
        publish:
          - complete_job_file_path: "<% ctx(runfolder) %>/Alignment_1/*/CompletedJobInfo.xml"
          - fastq_files_path: "<% ctx(runfolder) %>/Alignment_1/*/Fastq"
          #- run_info_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>"
          #- interop_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/InterOp"
        do:
          - look_for_complete_file
      - when: <% succeeded() and ctx().machine_type = 'M0'%>
        publish:
          - complete_job_file_path: "<% ctx(runfolder) %>/CompletedJobInfo.xml"
          - fastq_files_path: "<% ctx(runfolder) %>/Data/Intensities/BaseCalls"
          #- run_info_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>"
          #- interop_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/InterOp"
        do:
          - look_for_complete_file
      - when: <% succeeded() and (ctx().machine_type = 'NDX' or ctx().machine_type = 'NB') %>
        publish:
          - complete_job_file_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/Alignment_1/*/CompletedJobInfo.xml"
          - fastq_files_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/Alignment_1/*/Fastq"
          #- run_info_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>"
          #- interop_path: "<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/InterOp"
        do:
          - test_complete_jobininfo_location_nextseq
      - when: <% failed() %>
        publish: failed_step="validate_folder_name  -- Couldn't find the Illumina runfolder inside <% ctx(experiment_name) %>, <% result().stdout %>, <% result().stderr %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed


  test_complete_jobininfo_location_nextseq:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    next:
      - when:  <% failed() %>
        publish:
          - complete_job_file_path: "<% ctx(runfolder) %>/Alignment_1/*/CompletedJobInfo.xml"
          - fastq_files_path: "<% ctx(runfolder) %>/Alignment_1/*/Fastq"
        do:
          - look_for_complete_file
      - when: <% succeeded() %>
        do:
          - look_for_complete_file

  look_for_complete_file:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    retry:
      count: <% ctx(num_check_demultiplexing_completed) %>
      delay: <% ctx(check_demultiplexing_retry_delay) %>
    next:
      - when: <% succeeded() %>
        do:
          - wp1_tso500
          - wp1_sera
          - wp2_tm
          - wp3_te
      - when: <% failed() %>
        do:
          - completed_job_file_missing

  wp1_tso500:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("wp1", "TSO500","<% ctx(csv_file_name) %>") else exit(1)'
    next:
      - when: <% succeeded() %>
        do:
          - bioinfo_error_notifier
          - runfolder_found
      - when: <% failed() %>
        do: noop

  wp1_sera:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("wp1", "sera","<% ctx(csv_file_name) %>") else exit(1)'
    next:
      - when: <% succeeded() %>
        do:
          - runfolder_found
          - wp1_preprocess_sera_data
      - when: <% failed() %>
        do: noop

  wp1_preprocess_sera_data:
    action: ductus.preprocess_workspace_sera
    input:
      runfolder: <% ctx(runfolder) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      machine_type: <% ctx(machine_type) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>

  wp2_tm:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("wp2", "tm","<% ctx(csv_file_name) %>") else exit(1)'
    next:
      - when: <% succeeded() %>
        do:
          - bioinfo_error_notifier
          - runfolder_found
      - when: <% failed() %>
        do: noop

  wp3_te:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("wp3", "te","<% ctx(csv_file_name) %>" ) else exit(1)'
    next:
      - when: <% succeeded() %>
        do:
          - wp3_preprocess_data
          - runfolder_found
      - when: <% failed() %>
        do: noop

  wp3_preprocess_data:
    action: ductus.preprocess_workspace_wp3_te
    input:
      runfolder: <% ctx(runfolder) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      machine_type: <% ctx(machine_type) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>

  runfolder_found:
    join: 1
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP] - Pre-processing, <% ctx(experiment_name) %>"
      body: Found runfolder!

  unexpected_machine_type:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>"
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP][ERROR] - Incorrect machine typ <% ctx(experiment_name) %>"
      body: Couldn't parse the machine type from the runfolder name, <% ctx(runfolder_name) %>. New machine or have the folder name been changed?
    next:
      - when: <% succeeded() %>
        do:
          - fail

  completed_job_file_missing:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] -  <% ctx(runfolder_name) %>"
      body: Couldn't find CompletedJobInfo.xml for <% ctx(runfolder_name) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP][ERROR] - Pre-processing, <% ctx(experiment_name) %>"
      body: Something went wrong during the pre-processing of <% ctx(experiment_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step) %>

  #mark_as_finished:
  #  action: core.http
  #  input:
  #    url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(api_version) %>/runfolders/path<% ctx(runfolder) %>
  #    body: '{"state": "done"}'
  #    method: "POST"

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail
