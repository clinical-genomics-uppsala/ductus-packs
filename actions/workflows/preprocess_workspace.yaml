version: "1.0" # Orquest version

description: Will process data written to Workarea by Illumina machines

input:
  - runfolder
  - runfolder_host
  - runfolder_host_port
  - demultiplexing_host
  - demultiplexing_host_port
  - demultiplexing_output_folder
  - api_version
  - mail_bioinfo
  - check_demultiplexing_completed_delay
  - num_check_demultiplexing_completed
  - check_demultiplexing_retry_delay
  - path_fastq_and_complete_file

vars:
  - csv_file_name: null
  - runfolder_path: null
  - runfolder_name: null
  - inbox_folder: null
  - failed_step: null
  - complete_job_file_path: null
  - fastq_files_path: null
  - run_info_path: null
  - interop_path: null
  - stderr: null
  - analysis: null
  - machine_name: null

tasks:
  check_for_samplesheet:
    action: core.local
    input:
      cmd: ls SampleSheet.csv
      cwd: <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: csv_file_name=<% result().stdout %>
        do:
          - get_runfolder_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_csv_file_name  -- Couldn't locate a SampleSheet.csv file in folder <% ctx(runfolder) %>, <% result().stdout %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_runfolder_name:
    action: core.local
    input:
      cmd: basename <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do:
          - get_runfolder_path
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_runfolder_name  -- Couldn't get runfolder name, <% result().stdout %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_runfolder_path:
    action: core.local
    input:
      cmd: dirname <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: runfolder_path=<% result().stdout %>
        do:
          - get_machine_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_runfolder_name  -- Couldn't get dir name for <% ctx(runfolder) %>, <% result().stdout %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_machine_name:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; p = re.compile("\d{6}_([A-Z]+[0-9]+)_.+");sys.stdout.write(p.search("<% ctx(runfolder_name) %>").group(1))'
    next:
      - when: <% succeeded() %>
        publish:
          - machine_name: "<% result().stdout %>"
          - complete_job_file_path: "<% ctx(runfolder) %>/<% ctx(path_fastq_and_complete_file).where($.name=result().stdout).complete_job_file_path.first() %>"
          - fastq_files_path: "<% ctx(runfolder) %>/<% ctx(path_fastq_and_complete_file).where($.name=result().stdout).fastq_files_path.first() %>"
        do:
          - wp1_gms560
          - wp1_sera
          - wp2_tm
          - wp2_abl
          - wp3_te
          - wp3_tc
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_machine_name  -- Couldn't retrieve machine config for runfolder, <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - unexpected_machine
          - mark_as_failed

  wp1_gms560:
    join: 1
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("<% ctx(csv_file_name) %>", "wp1", "gms560") else exit(1)'
    next:
      - when: <% succeeded() %>
        publish: analysis="wp1_gms560"
        do:
          - wp1_preprocess_gms560_data
          - runfolder_found
      - when: <% failed() %>
        do: analysis_checked_wp1_gms560

  wp1_sera:
    join: 1
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("<% ctx(csv_file_name) %>", "wp1", "sera") else exit(1)'
    next:
      - when: <% succeeded() %>
        publish: analysis="wp1_sera"
        do:
          - runfolder_found
          - look_for_complete_file_wp1_sera
      - when: <% failed() %>
        do: analysis_checked_wp1_sera

  wp2_tm:
    join: 1
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("<% ctx(csv_file_name) %>", "wp2", "tm") else exit(1)'
    next:
      - when: <% succeeded() %>
        publish: analysis="wp2_tm"
        do:
          - runfolder_found
          - look_for_complete_file_wp2_tm
      - when: <% failed() %>
        do: analysis_checked_wp2_tm

  wp2_abl:
    join: 1
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("<% ctx(csv_file_name) %>", "wp2", "abl") else exit(1)'
    next:
      - when: <% succeeded() %>
        publish: analysis="wp2_abl"
        do:
          - runfolder_found
          - look_for_complete_file_wp2_abl
      - when: <% failed() %>
        do: analysis_checked_wp2_abl

  wp3_te:
    join: 1
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("<% ctx(csv_file_name) %>", "wp3", "te") else exit(1)'
    next:
      - when: <% succeeded() %>
        publish: analysis="wp3_te"
        do:
          - runfolder_found
          - look_for_complete_file_wp3_te
      - when: <% failed() %>
        do: analysis_checked_wp3_te

  wp3_tc:
    join: 1
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import contains; exit(0) if contains("<% ctx(csv_file_name) %>", "wp3", "tc") else exit(1)'
    next:
      - when: <% succeeded() %>
        publish: analysis="wp3_tc"
        do:
          - runfolder_found
          - look_for_complete_file_wp3_tc
      - when: <% failed() %>
        do: analysis_checked_wp3_tc

  analysis_checked_wp1_gms560:
    action: core.noop
    next:
      - do: move_archived_folder

  analysis_checked_wp1_sera:
    action: core.noop
    next:
      - do: move_archived_folder

  analysis_checked_wp2_tm:
    action: core.noop
    next:
      - do: move_archived_folder

  analysis_checked_wp2_abl:
    action: core.noop
    next:
      - do: move_archived_folder

  analysis_checked_wp3_te:
    action: core.noop
    next:
      - do: move_archived_folder

  analysis_checked_wp3_tc:
    action: core.noop
    next:
      - do: move_archived_folder

  look_for_complete_file_wp1_sera:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    retry:
      count: <% ctx(num_check_demultiplexing_completed) %>
      delay: <% ctx(check_demultiplexing_retry_delay) %>
    next:
      - when: <% succeeded() and ctx().analysis = 'wp1_sera' %>
        do: wp1_preprocess_sera_data
      - when: <% failed() %>
        do:
          - completed_job_file_missing

  look_for_complete_file_wp2_tm:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    retry:
      count: <% ctx(num_check_demultiplexing_completed) %>
      delay: <% ctx(check_demultiplexing_retry_delay) %>
    next:
      - when: <% succeeded() and ctx().analysis = 'wp2_tm' %>
        do: wp2_tm_preprocess_data
      - when: <% failed() %>
        do:
          - completed_job_file_missing

  look_for_complete_file_wp2_abl:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    retry:
      count: <% ctx(num_check_demultiplexing_completed) %>
      delay: <% ctx(check_demultiplexing_retry_delay) %>
    next:
      - when: <% succeeded() and ctx().analysis = 'wp2_abl' %>
        do: wp2_abl_preprocess_data
      - when: <% failed() %>
        do:
          - completed_job_file_missing

  look_for_complete_file_wp3_te:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    retry:
      count: <% ctx(num_check_demultiplexing_completed) %>
      delay: <% ctx(check_demultiplexing_retry_delay) %>
    next:
      - when: <% succeeded() and ctx().analysis = 'wp3_te' %>
        do: wp3_te_preprocess_data
      - when: <% failed() %>
        do:
          - completed_job_file_missing

  look_for_complete_file_wp3_tc:
    action: core.local
    input:
      cmd: ls <% ctx(complete_job_file_path) %>
    retry:
      count: <% ctx(num_check_demultiplexing_completed) %>
      delay: <% ctx(check_demultiplexing_retry_delay) %>
    next:
      - when: <% succeeded() and ctx().analysis = 'wp3_tc' %>
        do: wp3_tc_preprocess_data
      - when: <% failed() %>
        do:
          - completed_job_file_missing

  wp1_preprocess_sera_data:
    action: ductus.preprocess_workspace_wp1_sera
    input:
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do: wp1_sera_done
      - when: <% failed() %>
        publish:
         - stderr: <% result().output.stderr %>
         - failed_step: "Unable to process sera data <% ctx(runfolder_name) %>"
        do:
         - fail

  wp1_preprocess_gms560_data:
    action: ductus.preprocess_workspace_wp1_gms560
    input:
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      demultiplexing_host: <% ctx(demultiplexing_host) %>
      demultiplexing_port: <% ctx(demultiplexing_host_port) %>
      demultiplexing_output_folder: <% ctx(demultiplexing_output_folder) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do: wp1_gms560_done
      - when: <% failed() %>
        publish:
         - stderr: <% result().output.stderr %>
         - failed_step: "Unable to process gms560 data <% ctx(runfolder_name) %>"
        do:
         - fail

  wp2_tm_preprocess_data:
    action: ductus.preprocess_workspace_wp2_tm
    input:
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do: wp2_tm_done
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "Unable to process WP2 TM data <% ctx(runfolder_name) %>"
        do:
          - fail

  wp2_abl_preprocess_data:
    action: ductus.preprocess_workspace_wp2_abl_action
    input:
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do: wp2_abl_done
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "Unable to process WP2 ABL data <% ctx(runfolder_name) %>"
        do:
          - fail

  wp3_te_preprocess_data:
    action: ductus.preprocess_workspace_wp3_te
    input:
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do: wp3_te_done
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "Unable to process WP3 TE data <% ctx(runfolder_name) %>"
        do:
          - fail

  wp3_tc_preprocess_data:
    action: ductus.preprocess_workspace_wp3_tc
    input:
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      samplesheet_file: <% ctx(csv_file_name) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      runfolder_host: <% ctx(runfolder_host) %>
      runfolder_host_port: <% ctx(runfolder_host_port) %>
      runfolder_api_version: <% ctx(api_version) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do: wp3_tc_done
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "Unable to process WP3 TC data <% ctx(runfolder_name) %>"
        do:
          - fail

  wp1_sera_done:
    action: core.noop
    next:
      - do: move_archived_folder

  wp1_tso500_done:
    action: core.noop
    next:
      - do: move_archived_folder

  wp1_gms560_done:
    action: core.noop
    next:
      - do: move_archived_folder

  wp2_tm_done:
    action: core.noop
    next:
      - do: move_archived_folder

  wp2_abl_done:
    action: core.noop
    next:
      - do: move_archived_folder

  wp3_te_done:
    action: core.noop
    next:
      - do: move_archived_folder

  wp3_tc_done:
    action: core.noop
    next:
      - do: move_archived_folder

  move_archived_folder:
    action: core.noop
    join: 6
    #action: core.local
    #input:
    #  cwd: <% ctx(runfolder_path) %>
    #  cmd: mv <% ctx(runfolder_name) %> archived_runfolders/
    #next:
    #  - when: <% failed() %>
    #    publish:
    #      - stderr: <% result().stderr %>
    #      - failed_step: "create_archived_folder  -- Could not create folder <% ctx(runfolder_path) %>/archived_runfolder"
    #    do:
    #      - bioinfo_error_notifier

  runfolder_found:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP] - Pre-processing, <% ctx(runfolder_name) %>, <% ctx(analysis) %>"
      body: Found runfolder!

  unexpected_machine:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>"
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP][ERROR] - Incorrect machine typ <% ctx(runfolder_name) %>"
      body: Couldn't parse the machine type from the runfolder name, <% ctx(runfolder_name) %>. New machine or have the folder name been changed?
    next:
      - when: <% succeeded() %>
        do:
          - fail

  completed_job_file_missing:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP][ERROR] -  <% ctx(runfolder_name) %>"
      body: Couldn't find CompletedJobInfo.xml for <% ctx(runfolder_name) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP][ERROR] - Pre-processing, <% ctx(runfolder_name) %>"
      body: Something went wrong during the pre-processing of <% ctx(runfolder_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step) %>, <% ctx(stderr) %>
    next:
      - do:
          - fail

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail

output:
  - stderr: <% ctx(stderr) %>
