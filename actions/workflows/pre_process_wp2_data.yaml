version: "1.0"  # Orquest version

description: Will rsync new wp2 sequence data to moriarty for processing

input:
  - runfolder
  - host
  - project_type
  - runfolder_host
  - runfolder_host_port
  - runfolder_api_version
  - transfer_to_host
  - transfer_to_location
  - transfer_to_key
  - transfer_to_user
  - mail_lab
  - mail_bioinfo

vars:
  - runfolder_name: null
  - machine_id: null
  - run_date: null
  - analysis_folder_name: null
  - alignment_folder: null
  - failed_step: null
  - stderr: null

tasks:
  get_runfolder_name:
    action: core.local
    input:
        cmd: python -c "import sys; sys.stdout.write('<% ctx(runfolder) %>'.split('/')[-1])"
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do: validate_folder_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_runfolder_name  -- Couldn't get runfolder name"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  validate_folder_name:
    action: core.local
    input:
      cmd: echo <% ctx(runfolder_name) %> | awk '!/^[0-9]*_[A-Z0-9]*_[0-9]*_[A-Z0-9-]*$/ {exit(1)}'
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_started
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "validate_folder_name  -- Couldn't  validate runfolder name <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed
          - missing_runfolder

  mark_as_started:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "started"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - get_machine_id
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_started -- Couldn't mark <% ctx(runfolder) %> as started!"
        do:
          - bioinfo_error_notifier

  get_machine_id:
    action: core.local
    input:
      cmd: python -c "import sys; sys.stdout.write('<% ctx(runfolder) %>'.split('_')[1])"
    next:
      - when: <% succeeded() %>
        publish: machine_id=<% result().stdout %>
        do:
          - get_run_date

  get_run_date:
    action: core.local
    input:
        cmd: python -c "import sys; sys.stdout.write('<% ctx(runfolder_name) %>'.split('_')[0])"
    next:
      - when: <% succeeded() %>
        publish: run_date=<% result().stdout %>
        do:
          - create_analysis_folder_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_run_date  -- Couldn't extract run date from  <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_analysis_folder_name:
    action: core.local
    input:
        cmd: echo "TruS_Myeloid_<% ctx(run_date) %>_<% ctx(machine_id) %>"
    next:
      - when: <% succeeded() %>
        publish: analysis_folder_name=<% result().stdout %>
        do:
          - create_inbox_analysis_folder_on_moriarty
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_analysis_folder_name  -- Couldn't create folder name"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_inbox_analysis_folder_on_moriarty:
    action: core.remote
    input:
      username: <% ctx(transfer_to_user) %>
      private_key: <% ctx(transfer_to_key) %>
      cwd: <% ctx(transfer_to_location) %>/<% ctx(project_type) %>/INBOX
      cmd: mkdir -p <% ctx(analysis_folder_name) %>/bam
      timeout: 10
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - transfer_samplesheet_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_inbox_analysis_folder_on_moriarty  -- Couldn't create inbox folder <% ctx(analysis_folder_name) %>/bam on <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  transfer_samplesheet_file:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python rsync.py -c -f <% ctx(runfolder) %>/SampleSheet.csv -t <% ctx(transfer_to_location) %>/<% ctx(project_type) %>/INBOX/<% ctx(analysis_folder_name) %>/ -u <% ctx(transfer_to_user) %> -i <% ctx(transfer_to_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 600
    next:
      - when: <% succeeded() %>
        do:
          - find_miseq_alignment_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_samplesheet_file  -- Couldn't transfer samplesheet"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  find_miseq_alignment_folder:
    action: core.local
    input:
      cmd: stat -c %n <% ctx(runfolder) %>/Data/Intensities/BaseCalls/Alignment*  | tail -n 1
    next:
      - when: <% succeeded() %>
        publish: alignment_folder=<% result().stdout %>
        do:
          - transfer_miseq_alignment_bam_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "find_miseq_alignment_folder  -- Couldn't locate alignment folder"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  transfer_miseq_alignment_bam_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python rsync.py -c -f '<% ctx(alignment_folder) %>/*.bam*' -t <% ctx(transfer_to_location) %>/<% ctx(project_type) %>/INBOX/<% ctx(analysis_folder_name) %>/bam/ -u <% ctx(transfer_to_user) %> -i <% ctx(transfer_to_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - transfer_miseq_alignment_vcf_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_miseq_alignment_bam_files  -- Couldn't transfer bam files"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  transfer_miseq_alignment_vcf_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python rsync.py -c -f '<% ctx(alignment_folder) %>/*.vcf*' -t <% ctx(transfer_to_location) %>/<% ctx(project_type) %>/INBOX/<% ctx(analysis_folder_name) %>/bam/ -u <% ctx(transfer_to_user) %> -i <% ctx(transfer_to_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_miseq_alignment_vcf_files  -- Couldn't transfer vcf files"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_transfer_complete_file:
    action: core.remote
    input:
      username: <% ctx(transfer_to_user) %>
      private_key: <% ctx(transfer_to_key) %>
      cwd: <% ctx(transfer_to_location) %>/<% ctx(project_type) %>/INBOX/<% ctx(analysis_folder_name) %>/
      cmd: echo "`date`" > Done.txt
      timeout: 10
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
          - pre_proccesing_complete_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_transfer_complete_file -- Couldn't couldn't create Done.txt file on <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  missing_runfolder:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP2][ERROR] - Runfolder name error: <% ctx(runfolder_name) %>"
      body: Problem with runfolder name -- <% ctx(runfolder_name) %>, the folder name may have been changed to not follow the Illumina naming scheme.
    next:
      - when: <% succeeded() %>
        do: fail

  pre_proccesing_complete_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP2][SUCCESS] - Pre-processing, <% ctx(runfolder_name) %>"
      body: "Pre-processing of <% ctx(runfolder_name) %> have been completed."

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP2][ERROR] - Pre-processing, <% ctx(runfolder_name) %>"
      body: Something went wrong during the pre-processing of <% ctx(runfolder_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step) %>, <% ctx(stderr)% >
    next:
      - when: <% succeeded() %>
        do: fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "done"}'
      method: "POST"
    next:
      - when: <% failed() %>
        publish: failed_step="mark_as_finished -- Couldn't mark <% ctx(runfolder) %> as finished!"
        do:
          - bioinfo_error_notifier

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do: fail
      - when: <% failed() %>
        publish: failed_step="mark_as_failed -- Couldn't mark <% ctx(runfolder) %> as failed!"
        do:
          - bioinfo_error_notifier

output:
  - stderr: <% ctx(stderr) %>
