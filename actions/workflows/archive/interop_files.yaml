version: "1.0" # mistral version

description: Will archive SAV files

input:
  - runinfo_file_path
  - sav_storage_location
  - sav_files
  - sav_machine_type_fold_and_extra_files

vars:
  - archive_folder: null
  - machine_id: null
  - save_machine_storage_folder: null
  - runfolder_path: null
  - runfolder_name: null
  - stderr: null

tasks:
  get_runfolder_path:
    action: core.local
    input:
      cmd: dirname <% ctx(runinfo_file_path) %>
    next:
      - when: <% succeeded() %>
        publish: 
         - runfolder_path: <% result().stdout %>
        do:
          - get_runfolder_name
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  get_runfolder_name:
    action: core.local
    input:
      cmd: basename <% ctx(runfolder_path) %>
    next:
      - when: <% succeeded() %>
        publish: 
         - runfolder_name: <% result().stdout %>
        do:
          - get_machine_id
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  get_machine_id:
    action: core.local
    input:
      cmd: python3 -c "import re;  print(re.search(r'[0-9]{6,8}_([A-Za-z]+[0-9]+)_', '<% ctx(runfolder_name) %>').groups()[0], end='')"
    next:
      - when: <% succeeded() %>
        publish: 
         - machine_id: <% result().stdout %>
        do:
          - get_save_machine_storage_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  get_save_machine_storage_folder:
    action: core.local
    input:
      cmd: echo -n <% ctx(sav_machine_type_fold_and_extra_files).get(ctx(machine_id)).get('type_folder') %>
    next:
      - when: <% succeeded() %>
        publish: 
         - save_machine_storage_folder: <% result().stdout %>
        do:
          - create_storage_folder_path
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  create_storage_folder_path:
    action: core.local
    input:
      cmd: echo -n <% ctx(sav_storage_location) %>/<% ctx(save_machine_storage_folder) %>/<% ctx(machine_id) %>/<% ctx(runfolder_name) %>
    next:
      - when: <% succeeded() %>
        publish:
         - archive_folder: <% result().stdout %>
        do:
          - create_storage_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  create_storage_folder:
    action: core.local
    input:
      cmd: mkdir -p <% ctx(archive_folder) %>
    next:
      - when: <% succeeded() %>
        do:
          - copy_sav_info
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  copy_sav_info:
    with:
      items: <% ctx(sav_files) %>
    action: core.local
    input:
      cmd: cp -r <% ctx(runfolder_path) %>/<% item() %> <% ctx(archive_folder) %>/
      timeout: 600
    retry:
      count: 5
      delay: 60
    next:
      - when: <% succeeded() and ctx(sav_machine_type_fold_and_extra_files).get(ctx(machine_id)).get('path_metrics', false) %>
        do:
          - copy_metrics
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

  copy_metrics:
    action: core.local
    input:
      cmd: cp -r <% ctx(runfolder_path) %>/<% ctx(sav_machine_type_fold_and_extra_files).get(ctx(machine_id)).get('path_metrics') %> <% ctx(archive_folder) %>/InterOp/
      timeout: 300
    retry:
      count: 30
      delay: 600
    next:
      - when: <% failed() %>
        publish:
          - stderr: <% result() %>

output:
  - stderr: <% ctx(stderr) %>
