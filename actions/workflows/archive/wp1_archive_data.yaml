version: "1.0" # mistral version

description: Will archive WP1 data, when processing has finished.

input:
    - experiment_name
    - project_type
    - storage_path
    - raw_inbox_storage_path
    - mail_bioinfo

vars:
  - run_year: null
  - runfolder_name: null
  - index_folder: null
  - fastq_folder: null
  - stderr: null

tasks:
  get_runfolder_name:
    action: core.local
    input:
      cmd: ls -d */ | sed 's/\///'
      cwd: <% ctx(raw_inbox_storage_path) %>
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do:
          - get_run_year
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_runfolder_name  -- Couldn't get runfolder name"
        do:
          - bioinfo_error_notifier

  get_run_year:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; p = re.compile("^(\d{4})\d{4}-[a-zA-Z]{2}");sys.stdout.write(p.search("<% ctx(experiment_name) %>").group(1))'
    next:
      - when: <% succeeded() %>
        publish: run_year=<% result().stdout %>
        do:
          - get_machine_type
          - create_runfolder_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_run_year  -- Couldn't extract run year from \"<% ctx(experiment_name) %>\""
        do:
          - bioinfo_error_notifier

  get_machine_type:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; p = re.compile("\d*_(MN|M0|NDX).*_.*");sys.stdout.write(p.search("<% ctx(runfolder_name) %>").group(1))'
    next:
      - when: <% succeeded() %>
        publish: machine_type=<% result().stdout %>
        do:
          - create_fastq_sample_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_machine_type  -- Couldn't parse the machine type from runfolder name, <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier

  create_fastq_sample_folder:
    action: core.local
    input:
      cwd: <% ctx(storage_path) %>/
      cmd: mkdir -p fastq/wp1_sera/<% ctx(experiment_name) %>
    next:
      - when: <% succeeded() %>
        publish: fastq_folder="<% ctx(storage_path) %>/fastq/wp1_sera/<% ctx(runfolder_name) %>_<% ctx(experiment_name) %>/"
        do:
          - sync_run_info
          - sync_index_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_fastq_sample_folder  -- Couldn't create fastq folder, <% ctx(storage_path) %>/fastq/wp1_sera/<% ctx(runfolder_name) %>_<% ctx(experiment_name) %> , <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier

  sync_run_info:
    action: core.local
    input:
      timeout: 86400
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/Run*' -t <% ctx(fastq_folder) %> -l
    next:
      - when: <% succeeded() %>
        do:
          - sync_interop
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "sync_run_info  -- Couldn't sync RunInfo, ) , <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier

  sync_interop:
    action: core.local
    input:
      timeout: 86400
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f "<% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/InterOp" -t <% ctx(fastq_folder) %> -l
    next:
      - when: <% succeeded() and ctx(machine_type) = 'MN' %>
        do:
          - sync_miniseq_fastq_files
      - when: <% succeeded() and ctx(machine_type) = 'M0' %>
        do:
          - sync_miseq_fastq_files
      - when: <% succeeded() and ctx(machine_type) = 'NDX' %>
        do:
          - sync_nextseq_fastq_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "sync_interop  -- Couldn't sync InterOp, ) , <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier

  sync_miseq_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f "<% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/Data/Intensities/BaseCalls/*fastq.gz" -t <% ctx(fastq_folder) %> -l
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "sync_miseq_fastq_files -- Couldn't fastq files <% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/Data/Intensities/BaseCalls/*fastq.gz"
        do:
          - bioinfo_error_notifier

  sync_miniseq_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f "<% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/Alignment_*/*/Fastq/*fastq.gz" -t <% ctx(fastq_folder) %> -l
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "sync_miseq_fastq_files -- Couldn't fastq files <% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/Alignment_*/*/Fastq/*fastq.gz"
        do:
          - bioinfo_error_notifier

  sync_nextseq_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f "<% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/<% ctx(runfolder_name) %>/Alignment_*/*/Fastq/*fastq.gz" -t <% ctx(fastq_folder) %> -l
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "sync_miseq_fastq_files -- Couldn't fastq files <% ctx(raw_inbox_storage_path) %>/<% ctx(runfolder_name) %>/<% ctx(runfolder_name) %>/Alignment_*/*/Fastq/*fastq.gz"
        do:
          - bioinfo_error_notifier

  sync_index_file:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f "<% ctx(raw_inbox_storage_path) %>/*index.csv" -t "<% ctx(fastq_folder) %>" -l
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "sync_index_file  -- Couldn't sync index file <% ctx(raw_inbox_storage_path) %>/*index.csv"
        do:
          - bioinfo_error_notifier

  create_runfolder_folder:
    action: core.local
    input:
      cwd: <% ctx(storage_path) %>
      cmd: mkdir -p runfolders
    next:
      - when: <% succeeded() %>
        publish: archive_runfolder="<% ctx(storage_path) %>/runfolders/"
        do:
          - compress_runfolder_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_year_runfolder_folder  -- Couldn't create folder <% ctx(storage_path) %>/runfolders/"
        do:
          - bioinfo_error_notifier

  compress_runfolder_folder:
    action: core.local
    input:
      cwd: <% ctx(raw_inbox_storage_path) %>
      cmd: tar -zcf <% ctx(archive_runfolder) %>/<% ctx(experiment_name) %>__<% ctx(runfolder_name) %>.tar.gz <% ctx(runfolder_name) %>
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - validate_runfolder_archive
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "compress_runfolder_folder  -- Couldn't compress folder ctx(raw_inbox_storage_path) %>/ngs/preprocessing/<% ctx(project_type) %>/INBOX/<% ctx(experiment_name) %>"
        do:
          - bioinfo_error_notifier

  validate_runfolder_archive:
    action: core.local
    input:
      cmd: tar --compare --file=<% ctx(archive_runfolder) %>/<% ctx(experiment_name) %>__<% ctx(runfolder_name) %>.tar.gz -C <% ctx(raw_inbox_storage_path) %>
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - create_checksum_for_archive
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "validate_runfolder_archive  -- Couldn't validate compressed folder <% ctx(archive_runfolder) %>/<% ctx(experiment_name) %>__<% ctx(runfolder_name) %>.tar.gz"
        do:
          - bioinfo_error_notifier

  create_checksum_for_archive:
    action: core.local
    input:
      cmd: sha256sum <% ctx(archive_runfolder) %>/<% ctx(experiment_name) %>__<% ctx(runfolder_name) %>.tar.gz > <% ctx(archive_runfolder) %>/<% ctx(experiment_name) %>__<% ctx(runfolder_name) %>.tar.gz.sha256
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_checksum_for_archive  -- Couldn't create checksum for compressed folder <% ctx(archive_runfolder) %>/<% ctx(experiment_name) %>__<% ctx(runfolder_name) %>.tar.gz"
        do:
          - bioinfo_error_notifier

  archive_done_notifier:
    join: 3
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][SUCCESS] - Archiving, <% ctx(experiment_name) %>"
      body: <% ctx(experiment_name) %> has been archived!!!

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: "stanley@clinicalgenomics-as.se"
      subject: "'[DUCTUS][WP1][ERROR] - Archiving, <% ctx(runfolder_name) %>'"
      body: Something went wrong during the archiving of <% ctx(runfolder_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step)  %>, <% ctx(stderr) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

output:
  - stderr: <% ctx(stderr) %>
