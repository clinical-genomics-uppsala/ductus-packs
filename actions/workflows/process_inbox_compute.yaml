version: "1.0" # Orquest version

description: Will analyse data found in the inbox folder using ...

input:
    - runfolder
    - host
    - runfolder_host
    - runfolder_host_port
    - runfolder_api_version
    - process_host
    - process_key
    - process_user
    - process_settings
    - run_statistics_path
    - mail_bioinfo

vars:
  - failed_step: null
  - experiment_names: null
  - experiment_information: null
  - stderr: "ERROR"

tasks:
  get_experiments:
    action: core.local
    input:
      cwd:  <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import get_experiments; import json; print(json.dumps([experiment for experiment in get_experiments("SampleSheet.csv")]))'
    next:
      - when: <% succeeded() %>
        publish: experiment_names=<% result().stdout %>
        do:
          - get_experiment_information
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_experiments  -- couldn't fetch experiment information from SampleSheet.csv in <% ctx(runfolder) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_experiment_information:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: python3 -c 'from ductus.tools.utils import get_experiments; import json; print(json.dumps(get_experiments("SampleSheet.csv")))'
    next:
      - when: <% succeeded() %>
        publish: experiment_information=<% result().stdout %>
        do:
          - mark_as_started
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_experiment_information -- couldn't get experiment information for <% ctx(runfolder) %>"
        do:
         - bioinfo_error_notifier

  mark_as_started:
    join: all
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "started"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
         - run_analysis
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_started -- Couldn't mark <% ctx(runfolder) %> as started!"
        do:
          - bioinfo_error_notifier
    
  run_analysis:
    with: 
      items: <% ctx(experiment_names) %> 
    action: ductus.run_analysis_action
    input:
      runfolder: <% ctx(runfolder) %>
      host: <% ctx(host) %>
      experiment_name: <% item() %>
      experiment_information: <% ctx(experiment_information).get(item()) %>
      process_settings: <% ctx(process_settings) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
      - when: <% failed() %>
        publish:
          - stderr: "run analysis failed"
          - failed_step: 'run_analysis  -- Could not start analysis on <% ctx(experiment_names) %>'
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][ERROR] - Failed processing <% ctx(runfolder) %>"
      body: Something went wrong during processing of folder <% ctx(runfolder) %>. A Bioinformatician has been notified.
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "done"}'
      method: "POST"
    next:
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_finished -- Couldn't mark <% ctx(runfolder) %> as finished!"
        do:
          - bioinfo_error_notifier

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_failed -- Couldn't mark <% ctx(runfolder) %> as failed!"
        do:
          - bioinfo_error_notifier

# output:
#   - stderr: <% ctx(stderr) %>
