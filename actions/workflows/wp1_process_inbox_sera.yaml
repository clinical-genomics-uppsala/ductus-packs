version: "1.0" # Orquesta version
description: Will analyse data found in the inbox folder using SERA

input:
  - runfolder
  - runfolder_host
  - runfolder_host_port
  - runfolder_api_version
  - local_folder_prefix
  - project_type
  - processing_host
  - processing_key
  - processing_user
  - ref_files
  - sera_version
  - mail_lab
  - mail_bioinfo

vars:
  - experiment_name: null
  - run_year: null
  - csv_file_name: null
  - outbox_folder: null
  - stderr: null

tasks:
  get_experiment_name:
    action: core.local
    input:
      cmd: python3 -c 'import sys; sys.stdout.write("<% ctx(runfolder) %>".split("/")[-1])'
    next:
      - when: <% succeeded() %>
        publish: experiment_name=<% result().stdout %>
        do:
          - get_run_year
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: 'get_experiment_name  -- Could not get experiment name'
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_run_year:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; p = re.compile("^(\d{4})\d{4}_[a-zA-Z]{2}");sys.stdout.write(p.search("<% ctx(experiment_name) %>").group(1))'
    next:
      - when: <% succeeded() %>
        publish: run_year=<% result().stdout %>
        do:
          - get_csv_file_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: 'get_run_year  -- Could not extract run year from <% ctx(experiment_name) %>'
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_csv_file_name:
    action: core.local
    input:
      cmd: ls *_index.csv
      cwd: <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: csv_file_name=<% result().stdout %>
        do:
          - mark_as_started
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_csv_file_name  -- Could not locate a csv file in folder <% ctx(experiment_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  mark_as_started:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "started"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - create_rawdata_folder
          - create_csv_folder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "mark_as_started -- Could not mark <% ctx(runfolder) %> as started!"
        do:
          - bioinfo_error_notifier

  create_rawdata_folder:
    action: core.local
    input:
      cwd: <% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/fastq_filer
      cmd: mkdir -p "<% ctx(run_year) %>/<% ctx(experiment_name) %>_rawdata"
    next:
      - when: <% succeeded() %>
        publish: raw_data_folder="<% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/fastq_filer/<% ctx(run_year) %>/<% ctx(experiment_name) %>_rawdata"
        do:
          - copy_rawdata
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_runfolder_on_moriarty  -- Could not create fastq folder  <% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/fastq_filer<% ctx(run_year) %>/<% ctx(experiment_name) %>_rawdata"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  copy_rawdata:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: cp raw/*.fastq.gz <% ctx(raw_data_folder) %>/
      timeout: 3600
    next:
      - when: <% succeeded() %>
        do:
         - run_sera
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "copy_rawdata  -- Could not copy raw data to <% ctx(raw_data_folder) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_csv_folder:
    action: core.local
    input:
      cmd: mkdir -p <% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/sample_files/<% ctx(run_year) %>
    next:
      - when: <% succeeded() %>
        publish: csv_folder="<% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/sample_files/<% ctx(run_year) %>"
        do:
          - copy_csv_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_csv_folder  -- Could not create csv folder <% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/sample_files/<% ctx(run_year) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  copy_csv_file:
    action: core.local
    input:
      cwd: <% ctx(runfolder) %>
      cmd: cp <% ctx(csv_file_name) %> <% ctx(csv_folder) %>/
    next:
      - when: <% succeeded() %>
        do:
          - create_OUTBOX_sera_analysis
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "copy_csv_file  -- Could not copy csv file <% ctx(csv_file_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_OUTBOX_sera_analysis:
    action: core.local
    input:
      cmd: mkdir -p <% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/OUTBOX/<% ctx(experiment_name) %>
    next:
      - when: <% succeeded() %>
        publish: outbox_folder="<% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/OUTBOX/<% ctx(experiment_name) %>"
        do:
          - copy_sampleseheet
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_OUTBOX_sera_analysis  -- Could not outbox folder <% ctx(local_folder_prefix) %>/ngs/<% ctx(project_type) %>/OUTBOX/<% ctx(experiment_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  copy_sampleseheet:
    action: core.local
    input:
      cmd: cp <% ctx(runfolder) %>/SampleSheet.csv  <% ctx(outbox_folder) %>/
    next:
      - when: <% succeeded() %>
        do:
          - run_sera
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "copy_sampleseheet  -- Could not copy SampleSheet to <% ctx(outbox_folder) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  run_sera:
    join: all
    action: ductus.start_sera_analys
    input:
      username: <% ctx(processing_user) %>
      private_key: <% ctx(processing_key) %>
      hosts: <% ctx(processing_host) %>
      experiment_name: <% ctx(experiment_name) %>
      year: <% ctx(run_year) %>
      sera_version: <% ctx(sera_version) %>
      input_file_name: <% ctx(csv_file_name) %>
      analysis: <% ctx(project_type) %>
      globals: "MARVIN"
      normal: "annovar"
      project: "wp1"
      project_type: <% ctx(project_type) %>
      ref_dir: <% ctx(ref_files) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "run_sera  -- Could not start sera <% ctx(sera_version) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][WP1][ERROR] - SERA processing, <% ctx(experiment_name) %>"
      body: Something went wrong during the sera processing of <% ctx(experiment_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step)  %>, <% ctx(stderr) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "done"}'
      method: "POST"

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail
          - molpat_error_notifier

  molpat_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-uu.se
      subject: "[DUCTUS][WP1][ERROR] - SERA processing failure, <% ctx(experiment_name) %>"
      body: Something went wrong during SERA processing of folder <% ctx(experiment_name) %>. A Bioinformatician has been notified.
    next:
      - when: <% succeeded() %>
        do:
          - fail

output:
  - stderr: <% ctx(stderr) %>
