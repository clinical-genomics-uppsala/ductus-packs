version: "1.0" # Orquest version

description: Will rsync new wp3 TE sequence data to compute for processing and archiving data on hospital

input:
  - runfolder_path
  - runfolder_name
  - samplesheet_file
  - fastq_files_path
  - transfer_to_host
  - transfer_to_location
  - transfer_to_key
  - transfer_to_user
  - runfolder_host
  - runfolder_host_port
  - runfolder_api_version
  - mail_lab
  - mail_bioinfo
  - archive_location

vars:
  - TE_name: null
  - TE_folder: null
  - transfer_folder: null
  - mod_samplesheet_name: null
  - run_year: null
  - stderr: null

tasks:
  dos2unix:
    action: core.local
    input:
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: dos2unix -n <% ctx(samplesheet_file)%> SampleSheet.dos2unix.csv
    next:
      - when: <% succeeded %>
        do:
          - extract_TE_header_SampleSheet
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "dos2unix -- Could not run dos2unix on ctx(samplesheet_file)%>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  extract_TE_header_SampleSheet:
    action: core.local
    input:
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: sed '/Sample_ID/q' SampleSheet.dos2unix.csv > SampleSheet_TE.csv
    next:
      - when: <% succeeded %>
        do:
          - extract_TE_samples_SampleSheet
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "extract_TE_header_SampleSheet -- Failed to extract TE header from <% ctx(samplesheet_file) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  extract_TE_samples_SampleSheet:
    action: core.local
    input:
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: grep ",TE$" SampleSheet.dos2unix.csv >> SampleSheet_TE.csv
    next:
      - when: <% succeeded() %>
        publish: mod_samplesheet_name="SampleSheet_TE.csv"
        do:
          - get_TE_number
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "extract_TE_samples_SampleSheet -- Failed to extract TE samples from <% ctx(samplesheet_file)%>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_TE_number:
    action: core.local
    input:
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: sed -n '/Sample_ID/{ :a; n; p; ba; }' SampleSheet_TE.csv | awk -F, '{print $3}' | awk -F_ '{print $4}' | tail -1
    next:
      - when: <% succeeded %>
        publish: TE_name="TE<% result().stdout %>_"
        do:
          - concatenate_TE_name_and_date
      - when: <% failed() %>
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  concatenate_TE_name_and_date:
    action: core.local
    input:
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: pwd | xargs basename | awk -F_ '{print $1}'
    next:
      - when: <% succeeded() %>
        publish: TE_folder="<% ctx(TE_name) %><% result().stdout %>"
        do:
          - create_folder_on_compute
      - when: <% failed() %>
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_folder_on_compute:
    action: core.remote
    input:
      username: <% ctx(transfer_to_user) %>
      private_key: <% ctx(transfer_to_key) %>
      cwd: <% ctx(transfer_to_location) %>/TWIST/INBOX
      cmd: mkdir -p <% ctx(TE_folder) %>/fastq/
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() %>
        publish: transfer_folder="<% ctx(transfer_to_location) %>/TWIST/INBOX/<% ctx(TE_folder) %>"
        do:
          - send_transfer_mail
          - transfer_fastq_files
          - transfer_SampleSheet
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_folder_on_compute -- Couldn't not create runfolder on <% ctx(transfer_to_host)%>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  send_transfer_mail:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP3][TE][Transfer] -- Start transfer of <% ctx(TE_folder) %> <% ctx(runfolder_name) %> to compute"
      body: Transfer of <% ctx(TE_folder) %> runfolder <% ctx(runfolder_name) %> has been executed!
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        do:
          - mark_as_failed

  transfer_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core
      cmd: >
          python3 -c 'from ductus.tools.wrappers import Rsync;
          from ductus.tools.utils import get_samples_and_project;
          [Rsync(from_path="<% ctx(fastq_files_path) %>/" + sample + "*fastq.gz",
          to_path="<% ctx(transfer_folder) %>/fastq",
          remote_address="<% ctx(transfer_to_host) %>",
          user="<% ctx(transfer_to_user) %>",
          from_is_remote=2,
          repeat=20,
          identity_file="<% ctx(transfer_to_key) %>",
          checksum_validate=True,
          preserve_permissions=False,
          local_sync=False).execute()
           for sample, project_type, *info in get_samples_and_project("wp3","te", "<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>/<% ctx(mod_samplesheet_name) %>")]'
      timeout: 99999
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_fastq_files -- Couldn't transfer fastq files to <% ctx(transfer_to_host) %>, <% result().stdout %>"
        do:
          - bioinfo_error_notifier
          - wp3_error_notifier
          - mark_as_failed

  transfer_SampleSheet:
    action: core.local
    input:
        cwd: /opt/src/ductus-core/ductus/scripts
        cmd: python3 rsync.py -c -f "<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>/<% ctx(mod_sameplsheet_name) %>" -t "<% ctx(transfer_folder) %>/SampleSheet.csv" -u <% ctx(transfer_to_user) %> -i <% ctx(transfer_to_key) %> -r <% ctx(transfer_to_host) %> -p 2
        timeout: 99999
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_SampleSheet -- Couldn't transfer samplesheet <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>/<% ctx(mod_sameplsheet_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  create_transfer_complete_file:
    join: all
    action: core.remote
    input:
      username: <% ctx(transfer_to_user) %>
      private_key: <% ctx(transfer_to_key) %>
      hosts: <% ctx(transfer_to_host) %>
      cwd: <% ctx(transfer_folder) %>
      cmd: touch Done.txt
    next:
      - when: <% succeeded() %>
        do:
          - get_run_year
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_transfer_complete_file -- Couldn't create Done.txt file "
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_run_year:
    action: core.local
    input:
      cmd: date "+%Y"
    next:
      - when: <% succeeded() %>
        publish: run_year=<% result().stdout %>
        do:
          - prepare_transfer_of_fastq_to_archive
      - when: <% failed() %>
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  prepare_transfer_of_fastq_to_archive:
    action: core.local
    input:
      cmd: mkdir -p <% ctx(archive_location) %>/TWIST/Fastq/<% ctx(run_year) %>/<% ctx(TE_folder) %>
    next:
      - when: <% succeeded() %>
        publish: archive_fastq_folder="<% ctx(archive_location) %>/TWIST/Fastq/<% ctx(run_year) %>/<% ctx(TE_folder) %>"
        do:
          - prepare_transfer_of_runfolder_to_archive
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "prepare_transfer_of_fastq_to_archive -- Couldn't create fastq runfolder in archive"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  prepare_transfer_of_runfolder_to_archive:
    action: core.local
    input:
        cmd: mkdir -p <% ctx(archive_location) %>/TWIST/Runfolders/<% ctx(run_year) %>/<% ctx(TE_folder) %>
    next:
      - when: <% succeeded() %>
        publish: archive_runfolder="<% ctx(archive_location) %>/TWIST/Runfolders/<% ctx(run_year) %>/<% ctx(TE_folder) %>"
        do:
          - archive_fastq_and_runfolder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "prepare_transfer_of_runfolder_to_archive -- failed to create runfolder archive folder"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  archive_fastq_and_runfolder:
    action: ductus.archive_runfolder_and_fastq
    input:
      samplesheet_file: <% ctx(samplesheet_file) %>
      compress_runfolder_name: <% ctx(TE_folder) %>
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      project_type: "klinik"
      storage_path_runfolder: <% ctx(archive_runfolder) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      storage_path_fastq: <% ctx(archive_fastq_folder) %>
      analysis: "te"
      wp: "wp3"
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "archive_fastq_and_runfolder  -- Couldn't archive fastq and runfolder <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      body: '{"state": "done"}'
      method: "POST"

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - wp3_error_notifier

  wp3_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP3][TE][Error] (<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>): Transfer stopped."
      body: "Transfer of  <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %> has been stopped. Please consult bioinformaticians."
    next:
      - when: <% succeeded() %>
        do:
          - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP3][TE][ERROR] - Pre-processing, <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>"
      body: Something went wrong during the pre-processing of <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>, please investigate!!!\n Failure message -- <% failed_step  %>, <% ctx(stderr) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  archive_done_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP3][TE][SUCCESS] - Archiving, <% ctx(runfolder_name) %>"
      body: <% ctx(runfolder_name) %> has been archived!!!


output:
  - stderr: <% ctx(stderr) %>
