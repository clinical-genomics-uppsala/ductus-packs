version: "1.0" # Orquesta version

description: Start analyze data on facility cluster

input:
  - TE_folder
  - host
  - runpanel
  - bcbio_version
  - processing_user
  - processing_key
  - processing_host
  - mail_lab
  - host_port
  - runfolder_api_version

vars:
  - runfolder_name: null
  - TE_basename: null
  - stderr: null

tasks:
  runfolder_directory:
    action: core.local
    input:
      cwd: <% ctx(TE_folder) %>
      cmd: ls -d */ | sed 's/\///'
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do:
          - TE_basename_get
      - when: <% failed() %>
        do:
          - mark_as_failed

  TE_basename_get:
    action: core.local
    input:
      cwd: <% ctx(TE_folder) %>
      cmd: basename <% ctx(TE_folder) %>
    next:
      - when: <% succeeded() %>
        publish: TE_basename=<% result().stdout %>
        do:
          - start_script
      - when: <% failed() %>
        do:
          - mark_as_failed

  start_script:
    action: core.remote
    input:
      username: <% ctx(processing_user) %>
      private_key: <% ctx(processing_key) %>
      hosts: <% ctx(processing_host) %>
      cwd: <% ctx(TE_folder) %>/<% ctx(runfolder_name) %>
      cmd: /projects/wp3/Script/TWIST_Marvin/run_everything_script.sh
      timeout: 345600
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
          - send_start_notifier
      - when: <% failed() %>
        do:
          - mark_as_failed

  send_start_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: WP3 -- Starting analysis of <% ctx(TE_basename) %>
      body: <% ctx(TE_basename) %> analysis has been started!
    next:
      - when: <% failed() %>
        do:
          - mark_as_failed

  mark_as_failed:
    action: core.http
    input:
        url:  http://<% ctx(host) %>:<% ctx(host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(TE_folder) %>
        body: '{"state": "error"}'
        method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(host) %>:<% ctx(host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(TE_folder) %>
      body: '{"state": "done"}'
      method: "POST"

output:
  - stderr: <% ctx(stderr) %>
