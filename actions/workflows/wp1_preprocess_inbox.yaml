version: "1.0" # Orquest version

description: Will rsync new sequence data to moriarty for processing

input:
  - runfolder
  - runfolder_host
  - runfolder_host_port
  - api_version
  - transfer_to_host
  - transfer_location
  - transfer_key
  - transfer_user
  - project_type
  - storage_path
  - mail_lab
  - mail_bioinfo
  - failed_step

vars:
  - experiment_name: null
  - runfolder_name: null
  - csv_file_name: null
  - machine_type: null
  - failed_step: null
  - stderr: null

tasks:
  get_experiment_name:
    action: core.local
    input:
      cmd: python3 -c "import sys; sys.stdout.write('<% ctx(runfolder) %>'.split('/')[-1])"
    next:
      - when: <% succeeded() %>
        publish: experiment_name=<% result().stdout %>
        do:
          - get_runfolder_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_experiment_name  -- Couldn't get experiment name"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  get_runfolder_name:
    action: core.local
    input:
      cmd: ls -d */ | sed 's/\///' | grep -E '^[0-9]+'
      cwd: <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: runfolder_name=<% result().stdout %>
        do:
          - get_csv_file_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_runfolder_name  -- Couldn't get runfolder name"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  get_csv_file_name:
    action: core.local
    input:
      cmd: ls *index.csv
      cwd: <% ctx(runfolder) %>
    next:
      - when: <% succeeded() %>
        publish: csv_file_name=<% result().stdout %>
        do:
          - validate_csv_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_csv_file_name  -- Couldn't locate a csv file in folder <% ctx(experiment_name) %>"
        do:
          - bioinfo_error_notifier
          - missing_csv_file
          - mark_as_failed

  validate_csv_file:
    action: core.local
    input:
      cmd: echo <% ctx(csv_file_name) %> | awk '!/^.*\.csv$/ {exit(1)}'
    next:
      - when: <% succeeded() %>
        do:
          - validate_folder_name
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "validate_csv_file  -- Couldn't validate csv file name -- <% ctx(csv_file_name) %>"
        do:
          - bioinfo_error_notifier
          - missing_csv_file
          - mark_as_failed

  validate_folder_name:
    action: core.local
    input:
      cmd: echo <% ctx(runfolder_name) %> | awk '!/^[0-9]*_[A-Z0-9]*_[0-9]*_[A-Z0-9-]*$/ {exit(1)}'
    next:
      - when: <% succeeded() %>
        do:
          - get_machine_type
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "validate_folder_name  -- Couldn't find the Illumina runfolder inside <% ctx(experiment_name) %>"
        do:
          - bioinfo_error_notifier
          - missing_runfolder
          - mark_as_failed

  get_machine_type:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; p = re.compile("\d*_(MN|M0|NDX).*_.*");sys.stdout.write(p.search("<% ctx(runfolder_name) %>").group(1))'
    next:
      - when: <% succeeded() %>
        publish: machine_type=<% result().stdout %>
        do:
          - mark_as_started
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_machine_type  -- Couldn't parse the machine type from runfolder name, <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - unexpected_machine_type
          - mark_as_failed

  mark_as_started:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "started"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - create_runfolder_on_moriarty
      - when: <% failed() %>
        publish:
            - stderr: <% result().stderr %>
            - failed_step: "mark_as_started -- Couldn't mark <% ctx(runfolder) %> as started!"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier

  create_runfolder_on_moriarty:
    action: core.remote
    input:
      username: <% ctx(transfer_user) %>
      private_key: <% ctx(transfer_key) %>
      cmd: mkdir -p /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>
      timeout: 10
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - transfer_SampleSheet
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_runfolder_on_moriarty  -- Couldn't create folder on <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_SampleSheet:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/SampleSheet.csv' -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/ -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 3600
    next:
      - when: <% succeeded() %>
        do:
          - create_raw_folder_on_moriarty
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_runinfo_files  -- Couldn't transfer runinfo to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  create_raw_folder_on_moriarty:
    action: core.remote
    input:
      username: <% ctx(transfer_user) %>
      private_key: <% ctx(transfer_key) %>
      cmd: mkdir -p /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/raw
      timeout: 10
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() and ctx().machine_type = 'MN' %>
        do:
          - transfer_runinfo_files
      - when: <% succeeded() and ctx().machine_type = 'M0'%>
        do:
          - transfer_runinfo_files
      - when: <% succeeded() and ctx().machine_type = 'NDX' %>
        do:
          - transfer_nextseq_runinfo_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_raw_folder_on_moriarty  -- Couldn't create raw folder on <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed


  transfer_runinfo_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/Run*' -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/ -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 3600
    next:
      - when: <% succeeded() %>
        do:
          - transfer_interop_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_runinfo_files  -- Couldn't transfer runinfo to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_interop_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f <% ctx(runfolder) %>/<% ctx(runfolder_name) %>/InterOp -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/ -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 3600
    next:
      - when: <% succeeded() %>
        do:
          - transfer_csv_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_interop_files  -- Couldn't transfer interop_files to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_nextseq_runinfo_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/Run*' -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/ -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 3600
    next:
      - when: <% succeeded() %>
        do:
          - transfer_nextseq_interop_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_nextseq_interop_files  -- Couldn't transfer runinfo to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_nextseq_interop_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f <% ctx(runfolder) %>/<% ctx(runfolder_name) %>/InterOp -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %> -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 3600
    next:
      - when: <% succeeded %>
        do:
          - transfer_csv_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_nextseq_interop_files -- Couldn't transfer_interop_files to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_csv_file:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f <% ctx(runfolder) %>/<% ctx(csv_file_name) %> -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/ -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 3600
    next:
      - when: <% succeeded() and ctx(machine_type) = 'MN' %>
        do:
          - transfer_miniseq_fastq_files
      - when: <% succeeded() and ctx(machine_type) = 'M0' %>
        do:
          - transfer_miseq_fastq_files
      - when: <% succeeded() and ctx(machine_type) = 'NDX' %>
        do:
          - transfer_nextseq_fastq_files
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_csv_file -- Couldn't transfer csv to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_miseq_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/Data/Intensities/BaseCalls/*fastq.gz' -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/raw -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_miseq_fastq_files -- Couldn't transfer fastq files to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_miniseq_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/Alignment_*/*/Fastq/*fastq.gz' -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/raw -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_miseq_fastq_files -- Couldn't transfer fastq files to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_nextseq_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f '<% ctx(runfolder) %>/<% ctx(runfolder_name) %>/<% ctx(runfolder_name) %>/Alignment_*/*/Fastq/*fastq.gz' -t /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/raw -u <% ctx(transfer_user) %> -i <% ctx(transfer_key) %> -r <% ctx(transfer_to_host) %> -p 2
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_nextseq_fastq_files -- Couldn't transfer fastq files to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  create_transfer_complete_file:
    action: core.remote
    input:
      username: <% ctx(transfer_user) %>
      private_key: <% ctx(transfer_key) %>
      cmd: echo "`date`" > /projects/INBOX/wp1_sera/<% ctx(experiment_name) %>/Done.txt
      timeout: 10
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
          - archive_data
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_transfer_complete_file -- Couldn't couldn't create Done.txt file on <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  archive_data:
    action: ductus.wp1_archive_data
    input:
      experiment_name: <% ctx(experiment_name) %>
      project_type: <% ctx(project_type) %>
      raw_inbox_storage_path: <% ctx(runfolder) %>
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "archive_data  -- Couldn't archive <% ctx(experiment_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed


  missing_runfolder:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Runfolder not found for <% ctx(experiment_name) %>"
      body: Couldn't find the Illumina runfolder that is supposed to be located inside <% ctx(experiment_name) %>, the folder name may have been changed to not follow the Illumina naming scheme.."
    next:
      - when: <% succeeded() %>
        do:
          - fail

  unexpected_machine_type:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>"
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Incorrect machine typ <% ctx(experiment_name) %>"
      body: Couldn't parse the machine type from the runfolder name, <% ctx(runfolder_name) %>. New machine or have the folder name been changed?
    next:
      - when: <% succeeded() %>
        do:
          - fail

  missing_csv_file:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Missing csv file, <% ctx(experiment_name) %>"
      body: Couldn't locate a csv file in folder <% ctx(experiment_name) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  molpat_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_lab) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Transfer failure, <% ctx(experiment_name) %>"
      body: Something went wrong during the transfer of data from <% ctx(experiment_name) %> to Moriarty. A Bioinformatician has been notified.
    next:
    - when: <% succeeded() %>
      do:
        - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Pre-processing, <% ctx(experiment_name) %>"
      body: Something went wrong during the pre-processing of <% ctx(experiment_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step)  %>, <% ctx(stderr) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "done"}'
      method: "POST"

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(api_version) %>/runfolders/path<% ctx(runfolder) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail

output:
  - stderr: <% ctx(stderr) %>
