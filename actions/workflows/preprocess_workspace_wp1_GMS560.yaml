version: "1.0" # Orquest version

description: Will rsync new sequence data to compute for GMS560 processing

input:
  - runfolder_path
  - runfolder_name
  - samplesheet_file
  - storage_path
  - transfer_to_host
  - transfer_to_location
  - transfer_to_key
  - transfer_to_user
  - runfolder_host
  - runfolder_host_port
  - runfolder_api_version
  - mail_lab
  - mail_bioinfo

vars:
  - sample_index_file: null
  - experiment_name: null
  - inbox_folder: null
  - project_types: null
  - run_year: null
  - stderr: null

tasks:
  get_run_year:
    action: core.local
    input:
      cmd: python3 -c 'import sys;import re; from datetime import datetime; p = re.compile("^(\d{6})_[a-zA-Z]{2}");sys.stdout.write(str(datetime.strptime(p.search("<% ctx(runfolder_name) %>").group(1),"%y%m%d").year))'
    next:
      - when: <% succeeded() %>
        publish: run_year=<% result().stdout %>
        do:
          - get_project_types
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_run_year  -- Could not extract run year from \"<% ctx(experiment_name) %>\""
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  get_project_types:
    action: core.local
    input:
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: python3 -c 'from ductus.tools.utils import get_project_types; import json; print(json.dumps(list(get_project_types("wp1", "GMS560", "<% ctx(samplesheet_file) %>"))))'
    next:
      - when: <% succeeded() %>
        publish: project_types=<% result().stdout %>
        do:
          - demultiplex
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "get_project_types  -- Could not extract project types \"<% ctx(runfolder_name) %>\""
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  demultiplex:
    action: core.remote
    input:
      username: <% ctx(processing_user) %>
      private_key: <% ctx(processing_key) %>
      hosts: <% ctx(processing_host) %>
      cwd: <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      cmd: bash demultiplex_GMS560.sh
      timeout: 172800
      hosts: <% ctx(processing_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - transfer_samplesheet_file
      - when: <% failed() %>
        publish:
          - stderr: "Demultplexing failed"
          - failed_step: "demultiplex -- failed demultiplexing on  <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - mark_as_failed

  transfer_samplesheet_file:
    with:
      items: <% ctx(project_types) %>
    action: core.local
    input:
      cwd: /opt/src/ductus-core/ductus/scripts
      cmd: python3 rsync.py -c -f <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>/<% ctx(samplesheet_file) %> -t <% ctx(transfer_to_location) %>/ngs/<% item() %>/INBOX/<% ctx(experiment_name) %>/ -u <% ctx(transfer_to_user) %> -i <% ctx(transfer_to_key) %> -r <% ctx(transfer_to_host) %> -p 2;
      timeout: 300
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_csv_file -- Could not transfer csv to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  transfer_fastq_files:
    action: core.local
    input:
      cwd: /opt/src/ductus-core
      cmd: >
          python3 -c 'from ductus.tools.wrappers import Rsync;
          from ductus.tools.utils import get_samples_and_project;
          [Rsync(from_path="<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>/fastq/*fastq.gz",
          to_path="<% ctx(transfer_to_location) %>/ngs/" + project_type + "/INBOX/<% ctx(experiment_name) %>",
          remote_address="<% ctx(transfer_to_host) %>",
          user="<% ctx(transfer_to_user) %>",
          from_is_remote=2,
          repeat=20,
          identity_file="<% ctx(transfer_to_key) %>",
          checksum_validate=True,
          preserve_permissions=False,
          local_sync=False).execute()
           for sample, project_type, *info in get_samples_and_project("wp1","sera", "<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>/<% ctx(samplesheet_file) %>")]'
      timeout: 86400
    next:
      - when: <% succeeded() %>
        do:
          - create_transfer_complete_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "transfer_fastq_files -- Could not transfer fastq files to <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  create_transfer_complete_file:
    with:
      items: <% ctx(project_types) %>
    action: core.remote
    join: all
    input:
      username: <% ctx(transfer_to_user) %>
      private_key: <% ctx(transfer_to_key) %>
      cwd: <% ctx(transfer_to_location) %>/ngs/
      cmd: echo "`date`" > <% item() %>/INBOX/<% ctx(experiment_name) %>/Done.txt;
      timeout: 10
      hosts: <% ctx(transfer_to_host) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
          - archive_runfolder_data
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_transfer_complete_file -- Could not create Done.txt file on <% ctx(transfer_to_host) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed

  archive_runfolder_data:
    with:
      items: <% ctx(project_types) %>
    action: ductus.wp1_archive_workspace
    input:
      samplesheet_file: <% ctx(samplesheet_file) %>
      experiment_name: <% ctx(experiment_name) %>
      runfolder_name: <% ctx(runfolder_name) %>
      runfolder_path: <% ctx(runfolder_path) %>
      fastq_files_path: <% ctx(fastq_files_path) %>
      storage_path: <% ctx(storage_path) %>
      run_year: <% ctx(run_year) %>
      project_type: <% item() %>
      analysis: "GMS560"
      wp: "wp1"
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do:
          - mark_as_finished
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "archive_runfolder_data -- Could not archive runfolder <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier
          - molpat_error_notifier
          - mark_as_failed






  create_year_runfolder_folder:
    with:
      items: <% ctx(project_types) %>
    action: core.local
    input:
      cwd: <% ctx(storage_path) %>/ngs/<% item() %>/archive/runfolders/<% ctx(run_year) %>/
      cmd: mkdir -p <% ctx(run_year) %>
    next:
      - when: <% succeeded() %>
        do:
          - archive_fastq_and_runfolder
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
          - failed_step: "create_year_runfolder_folder  -- Could not create folder <% ctx(storage_path) %>/ngs/project_types/archive/runfolders/<% ctx(run_year) %>/"
        do:
          - bioinfo_error_notifier

  archive_fastq_and_runfolder:
    with:
      items: <% ctx(project_types) %>
    action: ductus.archive_runfolder_and_fastq
    input:
      samplesheet_file: <% ctx(samplesheet_file) %>
      compress_runfolder_name: "tso500__<% ctx(runfolder_name) %>"
      runfolder_path: <% ctx(runfolder_path) %>
      runfolder_name: <% ctx(runfolder_name) %>
      project_type: <% item() %>
      storage_path_runfolder:  <% ctx(storage_path) %>/ngs/<% item() %>/archive/runfolders/<% ctx(run_year) %>/
      fastq_files_path: null
      storage_path_fastq: null
      analysis: "tso500"
      wp: "wp1"
      mail_bioinfo: <% ctx(mail_bioinfo) %>
    next:
      - when: <% succeeded() %>
        do:
          - archive_done_notifier
      - when: <% failed() %>
        publish:
          - stderr: <% result().output.stderr %>
          - failed_step: "archive_fastq_and_runfolder  -- Could not archive runfolder <% ctx(runfolder_name) %>"
        do:
          - bioinfo_error_notifier

  archive_done_notifier:
    join: all
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][SUCCESS] - TSO500 Archiving, <% ctx(runfolder_name) %>"
      body: <% ctx(runfolder_name) %> has been archived!!!

  molpat_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Move failure, <% ctx(experiment_name) %>"
      body: "Something went wrong during the move of data from workspace to inbox, <% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>, <% ctx(experiment_name) %>. A Bioinformatician has been notified."
    next:
      - when: <% succeeded() %>
        do:
          - fail

  bioinfo_error_notifier:
    action: core.sendmail
    input:
      to: <% ctx(mail_bioinfo) %>
      from: stanley@clinicalgenomics-as.se
      subject: "[DUCTUS][WP1][ERROR] - Pre-processing, <% ctx(experiment_name) %>"
      body: Something went wrong during the pre-processing of <% ctx(experiment_name) %>, please investigate!!!\n Failure message -- <% ctx(failed_step)  %>, <% ctx(stderr) %>
    next:
      - when: <% succeeded() %>
        do:
          - fail

  mark_as_finished:
    action: core.http
    input:
      url: http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      body: '{"state": "done"}'
      method: "POST"

  mark_as_failed:
    action: core.http
    input:
      url:  http://<% ctx(runfolder_host) %>:<% ctx(runfolder_host_port) %>/api/<% ctx(runfolder_api_version) %>/runfolders/path<% ctx(runfolder_path) %>/<% ctx(runfolder_name) %>
      body: '{"state": "error"}'
      method: "POST"
    next:
      - when: <% succeeded() %>
        do:
          - fail

output:
  - stderr: <% ctx(stderr) %>
